#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
#include <Wire.h>
#include <MFRC522.h>
#include <LiquidCrystal_I2C.h>

// WiFi credentials
const char *ssid = "Nord";
const char *password = "12345678";

// RFID setup
#define RST_PIN D1
#define SS_PIN D2
MFRC522 mfrc522(SS_PIN, RST_PIN);

// LCD display setup
LiquidCrystal_I2C lcd(0x3F, 16, 2);

// LED and Buzzer setup
int led1 = D5;
int led2 = D7;
int buzzer = D6;

// Product data
struct Product {
  const char *name;
  float price;
  int quantity;
};

Product products[] = {
    {"Sugar", 42.0, 0},
    {"Milk", 10.0, 0},
    {"Biscuits", 15.0, 0},
    {"Dairy Milk", 50.0, 0}
};
const int numProducts = sizeof(products) / sizeof(products[0]);

// Variables for tracking the cart
double total = 0;
int count_prod = 0;

// Web server setup
ESP8266WebServer server(80);

void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);

  // Initialize LCD display
  lcd.init();
  lcd.backlight();
  lcd.setCursor(0, 0);
  lcd.print("WELCOME TO");
  lcd.setCursor(0, 1);
  lcd.print("SMART TROLLY");
  delay(2000);
  lcd.clear();

  // Initialize RFID
  SPI.begin();
  mfrc522.PCD_Init();

  // Initialize LEDs and buzzer
  pinMode(led1, OUTPUT);
  pinMode(led2, OUTPUT);
  pinMode(buzzer, OUTPUT);

  // Start the web server
  server.on("/", HTTP_GET, handleRoot);
  server.begin();
}

void loop() {
  // Check for RFID card
  if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial()) {
    String cardID = "0013041055";
    for (byte i = 0; i < mfrc522.uid.size; i++) {
      cardID.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? "0" : ""));
      cardID.concat(String(mfrc522.uid.uidByte[i], HEX));
    }
    

    // Process the cardID to identify the product
    for (int i = 0; i < numProducts; i++) {
      if (cardID == products[i].name) {
        if (products[i].quantity > 0) {
          // Product already in the cart, remove it
          products[i].quantity--;
          total -= products[i].price;
          updateDisplay("Removed", products[i].name, products[i].price, total);
          digitalWrite(led2, HIGH);
          digitalWrite(buzzer, HIGH);
          delay(2000);
          digitalWrite(led2, LOW);
          digitalWrite(buzzer, LOW);
        } else {
          // Add the product to the cart
          products[i].quantity++;
          total += products[i].price;
          updateDisplay("Added", products[i].name, products[i].price, total);
          digitalWrite(led1, HIGH);
          digitalWrite(buzzer, HIGH);
          delay(2000);
          digitalWrite(led1, LOW);
          digitalWrite(buzzer, LOW);
        }
        break;  // Exit the loop once the product is found
      }
    }
  }
  server.handleClient();
}

void updateDisplay(const char *action, const char *productName, float productPrice, double total) {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print(action);
  lcd.print(": ");
  lcd.print(productName);
  lcd.setCursor(0, 1);
  lcd.print("Total Price: Rs.");
  lcd.print(total, 2);
}
void handleRoot() {
  String page = "<html><head><title>Smart Shopping Cart</title></head><style type=\"text/css\">";
  page += "table{border-collapse: collapse;}th {background-color: #4444db ;color: white;}table,td {border: 4px solid black;font-size: x-large;";
  page += "text-align:center;border-style: groove;border-color: rgb(255,0,0);}</style><body><center>";
  page += "<h1>Welcome To Smart Cart Trolly</h1><br><br><table style=\"width: 1200px;height: 450px;\"><tr>";
  page += "<th>ITEMS</th><th>QUANTITY</th><th>COST</th></tr>";

  for (int i = 0; i < numProducts; i++) {
    page += "<tr><td>";
    page += products[i].name;
    page += "</td><td>";
    page += products[i].quantity;
    page += "</td><td>";
    page += products[i].quantity * products[i].price;
    page += "</td></tr>";
  }
  page += "<tr><th>Grand Total</th><th>" + String(count_prod) + "</th><th>" + String(total, 2) + "</th>";
  page += "</tr></table><br><input type=\"button\" name=\"Pay Online Now\" value=\"Pay Online Now\" style=\"width: 200px;height: 50px\"></center></body></html>";
  page += "<meta http-equiv=\"refresh\" content=\"2\">";
  server.send(200, "text/html", page);
}
